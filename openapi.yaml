openapi: "3.0.2"
info:
  title: Proyek Aplikasi Ecommerce - Grup 1
  description: Dokumentasi API Ecommerce App - Grup 1
  contact:
    name: BE - Grup 1
    email: yusufnurwahid.contact@gmail.com
  version: "1.0"
servers:
  - url: https://api.server.dev/{version}
    variables:
      version:
        default: v1
        enum:
          - v1
          - v2
tags:
  - name: Users
    description: Daftar users
paths:
  /users:
    post:
      summary: Tambahkan user baru
      tags:
        - Users
      description: Cek selengkapnya di HTML bro
      requestBody:
        required: true
        description: Menambah user baru dengan input yang sesuai
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Frans Ihsan
                user_name:
                  type: string
                  example: frans1
                email:
                  type: string
                  example: frans@frans.com
                password:
                  type: string
                  format: password
                  example: frans123
                dob:
                  type: string
                  format: date
                  example: 2022-02-15
                gender:
                  type: boolean
                  example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                  message:
                    type: string
                    example: Berhasil menambahkan user baru
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Frans Ihsan
                      user_name:
                        type: string
                        example: frans1
                      email:
                        type: string
                        example: frans@frans.com
                      password:
                        type: string
                        format: password
                        example: frans123
                      dob:
                        type: string
                        format: date
                        example: 2022-02-15
                      gender:
                        type: boolean
                        example: 1
        '400':
          $ref: '#/components/responses/400'
    get:
      summary: Dapatkan semua detail user
      tags:
        - Users
      description: Cek selengkapnya di HTML bro
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  status:
                    type: boolean
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      address_id:
                        type: integer
                      name:
                        type: string
                      user_name:
                        type: string
                      email:
                        type: string
                      password:
                        type: string
                        format: password
                      dob:
                        type: string
                        format: date
                      gender:
                        type: boolean
                      created_at:
                        type: string
                        format: date-time
                      updated_at:
                        type: string
                        format: date-time
                      deleted_at:
                        type: string
                        format: date-time
                    example:
                      - id: 1
                        address_id: 1
                        name: Frans Ihsan
                        user_name: frans1
                        email: frans@frans.com
                        password: frans123
                        dob: 2022-02-15
                        gender: 1
                        created_at: 2022-02-15T05:19:20Z
                        updated_at: 2022-02-15T05:20:20Z
                        deleted_at: 2022-02-15T05:21:20Z
    put:
      summary: Ubah record berdasarkan ID
      tags:
        - Users
      parameters:
        - name: id
          in: path
          description: ID User hasil generate dari sistem
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/UserInput'
            example:
              name: Franz Ichsan
              user_name: franz1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SuccessSingleResponse'
              example:
                code: 200
                success: true
                message: Berhasil ubah data user
                data:
                  name: Franz Ichsan
                  user_name: franz1
        '204':
          $ref: '#/components/responses/204'
          # description: Gagal update data user
    delete:
      tags:
        - Users
      summary: Hapus data user
      parameters:
        - $ref: '#/components/parameters/UserID'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SuccessSingleResponse'
              example:
                code: 200
                success: true
                message: Berhasil hapus data
                data: {}
  /auth/login:
    post:
      tags:
        - Users
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/UserLogin'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/401'

components:
  parameters:
    UserID:
      name: id
      in: path
      required: true
      schema:
        type: integer
  schemas:
    UserLogin:
      type: object
      properties:
        user_name:
          type: string
        password:
          type: string
    UserInput:
      type: object
      properties:
        name:
          type: string
        user_name:
          type: string
        email:
          type: string
        password:
          type: string
    SuccessSingleResponse:
      type: object
      properties:
        code:
          type: integer
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/UserInput'
  responses:
    '400':
      description: Kesalahan dari client
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 400
              success:
                type: boolean
                example: false
              message:
                type: string
                example: Terjadi kesalahan pada input
              data:
                type: object
    '204':
      description: Kesalahan update
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 204
              success:
                type: boolean
                example: false
              message:
                type: string
                example: Tidak ada data yang diupdate
              data:
                type: object
                example: {}
    '401':
      description: Kesalahan autorisasi

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT