openapi: "3.0.2"
info:
  title: Proyek Aplikasi Ecommerce - Grup 1
  description: Dokumentasi API Ecommerce App - Grup 1
  contact:
    name: BE - Grup 1
    email: yusufnurwahid.contact@gmail.com
  version: "2.0"
servers:
  - url: http://3.1.211.120:8081/{entity}
    variables:
      entity:
        default: users
        enum:
          - users
          - login
          - products
          - addresses
tags:
  - name: Auth
    description: Autorisasi users
  - name: Users
    description: Daftar users
  - name: Addresses
    description: Daftar alamat
  - name: Products
    description: Daftar products
  - name: Transactions
    description: Daftar transactions
  - name: Orders
    description: Daftar orders
  - name: Payment Methods
    description: Daftar payment methods
paths:
  /login:
    post:
      tags:
        - Auth
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: User terautorisasi
          content:
            application/json:
              schema:
                type: object
                # $ref: '#/components/schemas/SuccessSingleResponse'
              example:
                code: 200
                message: berhasil masuk, mendapatkan token baru
                data:
                  email: ucup@ucup.com
                  token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        '500':
          description: Kesalahan autorisasi
          content:
            application/json:
              schema:
                type: object
              example:
                code: 500
                message: terdapat error di dalam server
                data:
  /users:
    post:
      summary: Tambahkan user baru
      tags:
        - Users
      description: Cek selengkapnya di HTML bro
      requestBody:
        required: true
        description: Menambah user baru dengan input yang sesuai
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                user_name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                  format: password
              example:
                name: Frans Ihsan
                user_name: frans1
                email: frans@frans.com
                password: frans123
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                      user_name:
                        type: string
                      email:
                        type: string
                example:
                  code: 200
                  message: sukses menambahkan user baru
                  data:
                    name: Frans Ihsan
                    user_name: frans1
                    email: frans@frans.com
        '400':
          $ref: '#/components/responses/400'
    # get:
    #   summary: Dapatkan semua detail user
    #   tags:
    #     - Users
    #   description: Cek selengkapnya di HTML bro
    #   security:
    #     - bearerAuth: []
    #   responses:
    #     '200':
    #       description: OK
    #       content:
    #         application/json:
    #           schema:
    #             type: object
    #             properties:
    #               code:
    #                 type: integer
    #                 example: 200
    #               status:
    #                 type: boolean
    #               data:
    #                 type: object
    #                 properties:
    #                   id:
    #                     type: integer
    #                   address_id:
    #                     type: integer
    #                   name:
    #                     type: string
    #                   user_name:
    #                     type: string
    #                   email:
    #                     type: string
    #                   password:
    #                     type: string
    #                     format: password
    #                   dob:
    #                     type: string
    #                     format: date
    #                   gender:
    #                     type: boolean
    #                   created_at:
    #                     type: string
    #                     format: date-time
    #                   updated_at:
    #                     type: string
    #                     format: date-time
    #                   deleted_at:
    #                     type: string
    #                     format: date-time
    #                 example:
    #                     id: 1
    #                     address_id: 1
    #                     name: Frans Ihsan
    #                     user_name: frans1
    #                     email: frans@frans.com
    #                     password: frans123
    #                     dob: 2022-02-15
    #                     gender: 1
    #                     created_at: 2022-02-15T05:19:20Z
    #                     updated_at: 2022-02-15T05:20:20Z
    #                     deleted_at: 2022-02-15T05:21:20Z
    put:
      summary: Ubah record berdasarkan ID
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/UserInput'
            example:
              name: Franz Ichsan
              user_name: franz1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SuccessSingleResponse'
              example:
                code: 200
                message: berhasil mengubah data user
                data:
                  name: Franz Ichsan
                  user_name: franz1
        '204':
          $ref: '#/components/responses/204'
    delete:
      tags:
        - Users
      summary: Hapus data user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SuccessSingleResponse'
              example:
                code: 200
                message: sukses menghapus user
                data:
  /addresses:
    post:
      summary: Tambah alamat baru
      tags:
        - Addresses
      requestBody:
        required: true
        description: Menambahkan alamat baru dengan input yang sesuai
        content:
          application/json:
            schema:
              type: object
              properties:
                street:
                  type: string
                city:
                  type: string
                province:
                  type: string
              example:
                street: Jl. Diponegoro No. 12
                city: Surabaya
                province: Jawa Timur
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      street:
                        type: string
                      city:
                        type: string
                      province:
                        type: string
                example:
                  code: 200
                  success: true
                  message: Berhasil menambahkan alamat baru
                  data:
                    id: 1
                    street: Jl. Diponegoro No. 12
                    city: Surabaya
                    province: Jawa Timur
        '400':
          $ref: '#/components/responses/400'
    get:
      summary: Dapatkan semua alamat
      tags:
        - Addresses
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    code:
                      type: integer
                    success:
                      type: boolean
                    message:
                      type: string
                    data:
                      type: object
                      properties:
                        id:
                          type: integer
                        street:
                          type: string
                        city:
                          type: string
                        province:
                          type: string
                  example:
                    code: 200
                    success: true
                    message: Berhasil menambahkan alamat baru
                    data:
                      - id: 1
                        street: Jl. Diponegoro No. 12
                        city: Surabaya
                        province: Jawa Timur
                      - id: 2
                        street: Jl. Jendral Soedirman
                        city: Semarang
                        province: Jawa Tengah
    put:
      summary: Update data alamat
      tags:
        - Addresses
      requestBody:
        required: true
        description: Mengubah data alamat dengan input yang sesuai
        content:
          application/json:
            schema:
              type: object
              properties:
                street:
                  type: string
                city:
                  type: string
                province:
                  type: string
              example:
                street: Jl. Jendral Soedirman
                city: Semarang
                province: Jawa Tengah
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      street:
                        type: string
                      city:
                        type: string
                      province:
                        type: string
                example:
                  code: 200
                  success: true
                  message: Berhasil mengupdate data alamat
                  data:
                    id: 1
                    street: Jl. Jendral Soedirman
                    city: Semarang
                    province: Jawa Tengah
        '400':
          $ref: '#/components/responses/400'
        '401':
          description: Kesalahan autorisasi
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
              example:
                  code: 401
                  success: false
                  message: User tidak terautorisasi
                  data: 
    delete:
      summary: Hapus sebuah alamat
      tags:
        - Addresses
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SuccessSingleResponse'
              example:
                code: 200
                success: true
                message: Berhasil hapus data alamat
                data: 
  /products:
    post:
      summary: Tambah produk baru
      tags:
        - Products
      requestBody:
        required: true
        description: Menambahkan produk baru dengan input yang sesuai
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                category:
                  type: string
                  enum: [Sneakers, Shirts, Pants, Accessories]
                description:
                  type: string
                gender:
                  type: boolean
                size:
                  type: string
                price:
                  type: integer
                stock:
                  type: integer
                image:
                  type: string
              example:
                name: Adidas Air Max
                category: Sneakers
                description: Produknya bagus banget lo
                gender: true
                size: '43'
                price: 1500000
                stock: 10
                image: https://www.nike.com/id/t/air-max-97-shoe-Ks2tvF/DJ2740-100 
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      description:
                        type: string
                      gender:
                        type: boolean
                      size:
                        type: integer
                      price:
                        type: integer
                      stock:
                        type: integer
                      image:
                        type: string
                example:
                  code: 201
                  message: sukses menambahkan produk baru
                  data:
                    id: 1
                    name: Adidas Air Max
                    description: Produknya bagus banget lo
                    gender: true
                    size: '43'
                    price: 1500000
                    stock: 10
                    image: https://www.nike.com/id/t/air-max-97-shoe-Ks2tvF/DJ2740-100
        '400':
          $ref: '#/components/responses/400'
    get:
      summary: Dapatkan seluruh produk
      tags:
        - Products
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          description:
                            type: string
                          gender:
                            type: boolean
                          size:
                            type: integer
                          price:
                            type: integer
                          stock:
                            type: integer
                          image:
                            type: string
                example:
                    code: 200
                    message: sukses mendapatkan semua produk
                    data:
                      - id: 1
                        name: Adidas Air Max
                        category: Sneakers
                        description: Produknya bagus banget lo
                        gender: true
                        size: '43'
                        price: 1500000
                        stock: 10
                        image: https://www.nike.com/id/t/air-max-97-shoe-Ks2tvF/DJ2740-100
                      - id: 2
                        name: Nike Ultra Boost
                        category: Sneakers
                        description: Produk kualitas impor
                        gender: true
                        size: '41'
                        price: 2000000
                        stock: 3
                        image: https://www.adidas.co.id/media/catalog/product/g/x/gx5236_sl_ecom.jpg
  /products/{id}:
    put:
      summary: Update data produk
      tags:
        - Products
      parameters:
        - name: id
          in: path
          description: ID produk hasil generate dari sistem
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        description: Mengubah data produk dengan input yang sesuai
        content:
          application/json:
            schema:
              type: object
              properties:
                price:
                  type: integer
                stock:
                  type: integer
              example:
                price: 1200000
                stock: 13
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      description:
                        type: string
                      gender:
                        type: boolean
                      size:
                        type: integer
                      price:
                        type: integer
                      stock:
                        type: integer
                      image:
                        type: array
                        items:
                          type: string
                example:
                  code: 200
                  message: Berhasil mengupdate data produk
                  data:
                    id: 1
                    name: Adidas Air Max
                    category: Sneakers
                    description: Produknya bagus banget lo
                    gender: true
                    size: '43'
                    price: 1200000
                    stock: 13
                    image: https://www.nike.com/id/t/air-max-97-shoe-Ks2tvF/DJ2740-100
        '400':
          $ref: '#/components/responses/400'
        '401':
          description: Kesalahan autorisasi
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
              example:
                  code: 401
                  message: User tidak terautorisasi
                  data:
    delete:
      summary: Hapus sebuah product
      tags:
        - Products
      parameters:
        - name: id
          in: path
          description: ID produk hasil generate sistem
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                # $ref: '#/components/schemas/SuccessSingleResponse'
              example:
                code: 200
                message: sukses menghapus produk
                data:
  /transactions:
    post:
      summary: Tambah transaksi baru
      tags:
        - Transactions
      requestBody:
        required: true
        description: Menambahkan transaksi baru dengan input yang sesuai
        content:
          application/json:
            schema:
              type: object
              properties:
                qty:
                  type: integer
                size:
                  type: string
                product_id:
                  type: integer
              example:
                qty: 5
                size: "4"
                product_id: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      product_id:
                        type: integer
                      user_id:
                        type: integer
                      size:
                        type: string
                      qty:
                        type: integer
                      status:
                        type: string
                        enum:
                          - cart
                          - order
                          - payed
                          - cancel
                example:
                  code: 200
                  message: sukses menambahkan transaksi baru
                  data:
                    id: 12
                    product_id: 1
                    user_id: 2
                    size: '41'
                    qty: 5
                    status: 'cart'
        '400':
          $ref: '#/components/responses/400'
    get:
      summary: Dapatkan seluruh transaksi berdasarkan UserID dari JWT
      tags:
        - Transactions
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    code:
                      type: integer
                    message:
                      type: string
                    data:
                      type: object
                      properties:
                        id:
                          type: integer
                        product_id:
                          type: integer
                        size:
                          type: string
                        qty:
                          type: integer
                        status:
                          type: string
                          enum:
                            - cart
                            - order
                            - payed
                            - cancel
                  example:
                    - code: 200
                      message: sukses mendapatkan semua transaksi berdasarkan UserID
                      data:
                        id: 10
                        product_id: 1
                        user_id: 2
                        size: '39'
                        qty: 5
                        status: 'cart'
                    - code: 200
                      message: sukses mendapatkan semua transaksi berdasarkan UserID
                      data:
                        id: 11
                        product_id: 1
                        user_id: 2
                        size: '40'
                        qty: 5
                        status: 'cart'
  /transactions/{id}:  
    get:
      summary: Mencari ID dari transaksi
      tags:
        - Transactions
      parameters:
        - name: id
          in: path
          description: Product ID hasil generate sistem
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        description: Mencari ID transaksi berdasarkan UserID (jwt), Produk ID, dan size
        content:
          application/json:
            schema:
              type: object
              properties:
                size:
                  type: string
              example:
                  size: '39'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    type: integer
                example:
                  code: 200
                  message: sukses mendapatkan ID transaksi
                  data: 10
        '400':
          $ref: '#/components/responses/400'
        '401':
          description: Kesalahan autorisasi
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
              example:
                  code: 401
                  message: User tidak terautorisasi
                  data:
    delete:
      summary: Hapus sebuah transaksi berdasarkan UserID, Produk ID, dan Size
      tags:
        - Transactions
      parameters:
        - name: id
          in: path
          description: Produk ID transaksi hasil generate sistem
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      requestBody:
        required: true
        description: Mencari ID transaksi berdasarkan UserID (jwt), Produk ID, dan size
        content:
          application/json:
            schema:
              type: object
              properties:
                size:
                  type: string
              example:
                  size: '39'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    type: object
              example:
                code: 200
                message: sukses menghapus data transaksi
                data:
  /orders:
    post:
      summary: Tambah order baru
      tags:
        - Orders
      requestBody:
        required: true
        description: Menambahkan order baru dengan input yang sesuai
        content:
          application/json:
            schema:
              type: object
              properties:
                transaction_id:
                  type: integer
                payment_method_id:
                  type: integer
                phone:
                  type: string
                status:
                  type: string
                  format: timestamp
              example:
                transaction_id: 1
                payment_method_id: 1
                phone: '081234445566'
                status: 2022-0216T12:00:00Z
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      transaction_id:
                        type: integer
                      payment_method_id:
                        type: integer
                      phone:
                        type: string
                      status:
                        type: string
                        format: timestamp
                example:
                  code: 200
                  success: true
                  message: Berhasil menambahkan order baru
                  data:
                    transaction_id: 1
                    payment_method_id: 1
                    phone: '081234445566'
                    status: 2022-0216T12:00:00Z
        '400':
          $ref: '#/components/responses/400'
    get:
      summary: Dapatkan semua orders
      tags:
        - Orders
      security:
      - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        transaction_id:
                          type: integer
                        payment_method_id:
                          type: integer
                        phone:
                          type: string
                        status:
                          type: string
                          format: timestamp
                example:
                  code: 200
                  success: true
                  message: Berhasil mendapatkan semua orders
                  data:
                  - transaction_id: 1
                    payment_method_id: 1
                    phone: '081234445566'
                    status: 2022:02:16T12:00:00Z
                  - transaction_id: 2
                    payment_method_id: 2
                    phone: '081234445567'
                    status: 2022:02:16T13:00:00Z
  /orders/{id}:  
    put:
      summary: Update data order
      tags:
        - Orders
      parameters:
        - name: id
          in: path
          description: ID order hasil generate dari sistem
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        description: Mengubah data order dengan input yang sesuai
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                status:
                  type: string
                  format: timestamp
              example:
                  phone: '081234445569'
                  status: 1970:01:01T00:00:00Z
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      phone:
                        type: string
                      status:
                        type: string
                        format: timestamp
                example:
                  code: 200
                  success: true
                  message: Berhasil mengupdate data order
                  data:
                    transaction_id: 1
                    payment_method_id: 1
                    phone: '081234445569'
                    status: 1970:01:01T00:00:00Z
        '400':
          $ref: '#/components/responses/400'
        '401':
          description: Kesalahan autorisasi
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
              example:
                  code: 401
                  success: false
                  message: User tidak terautorisasi
                  data: {}
    delete:
      summary: Hapus sebuah order
      tags:
        - Orders
      parameters:
        - name: id
          in: path
          description: ID order hasil generate sistem
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SuccessSingleResponse'
              example:
                code: 200
                success: true
                message: Berhasil hapus data order
                data: {}
  /payment-methods:
    post:
      summary: Tambah payment method baru
      tags:
        - Payment Methods
      requestBody:
        required: true
        description: Menambahkan payment method baru dengan input yang sesuai
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              example:
                name: Gopay
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                example:
                  code: 200
                  success: true
                  message: Berhasil menambahkan payment method baru
                  data:
                    id: 1
                    name: Gopay
        '400':
          $ref: '#/components/responses/400'
    get:
      summary: Dapatkan semua payment methods
      tags:
        - Payment Methods
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                example:
                  code: 200
                  success: true
                  message: Berhasil mendapatkan semua payment methods
                  data:
                  - id: 1
                    name: Gopay
                  - id: 2
                    name: LinkAja
  /payment-methods/{id}:  
    put:
      summary: Update data payment method
      tags:
        - Payment Methods
      parameters:
        - name: id
          in: path
          description: ID payment method hasil generate dari sistem
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        description: Mengubah data payment method dengan input yang sesuai
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              example:
                id: 1
                name: Dana
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                example:
                  code: 200
                  success: true
                  message: Berhasil mengupdate data payment method
                  data:
                    id: 1
                    name: Dana
        '400':
          $ref: '#/components/responses/400'
        '401':
          description: Kesalahan autorisasi
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
              example:
                  code: 401
                  success: false
                  message: User tidak terautorisasi
                  data: {}
    delete:
      summary: Hapus sebuah payment method
      tags:
        - Payment Methods
      parameters:
        - name: id
          in: path
          description: ID payment method hasil generate sistem
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SuccessSingleResponse'
              example:
                code: 200
                success: true
                message: Berhasil hapus data payment method
                data: {}
components:
  parameters:
    UserID:
      name: id
      in: path
      required: true
      schema:
        type: integer
  schemas:
    UserLogin:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: ucup@ucup.com
        password: ucup123
    UserInput:
      type: object
      properties:
        name:
          type: string
        user_name:
          type: string
        email:
          type: string
        password:
          type: string
    SuccessSingleResponse:
      type: object
      properties:
        code:
          type: integer
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/UserInput'
  responses:
    '204':
      description: Kesalahan update
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 204
              message:
                type: string
                example: Tidak ada data yang diupdate
              data:
                type: object
                example: 
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
              message:
                type: string
              data:
                type: object
                properties:
                  name:
                    type: string
                  user_name:
                    type: string
                  email:
                    type: string
            example:
              code: 400
              message: input client tidak sesuai
              data:
    '401':
      description: Kesalahan autorisasi
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 401
              success:
                type: boolean
                example: false
              message:
                type: string
                example: Email atau password tidak valid
              data:
                type: object
                example:
                  user_name: franz1
                  token: {}
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT